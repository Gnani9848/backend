server.port=8085
spring.application.name=FLIGHTGATEWAY

spring.main.web-application-type=reactive

# Enable Eureka Discovery
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.instance-id=${spring.application.name}-${server.port}

# Gateway configuration
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Timeout settings
spring.cloud.gateway.httpclient.connect-timeout=5000
spring.cloud.gateway.httpclient.response-timeout=5000

# Logging
logging.level.org.springframework.cloud.gateway=INFO
logging.level.reactor.netty=INFO

# Circuit breaker configuration
resilience4j.circuitbreaker.instances.default.failureRateThreshold=50
resilience4j.circuitbreaker.instances.default.waitDurationInOpenState=5000
resilience4j.circuitbreaker.instances.default.slidingWindowSize=10

# Identity Service Route (user & admin)
spring.cloud.gateway.routes[0].id=identity-service
spring.cloud.gateway.routes[0].uri=lb://identity-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/auth/**,/api/auth/swagger-ui.html


# Booking Service Route (user & admin)
spring.cloud.gateway.routes[1].id=booking-service
spring.cloud.gateway.routes[1].uri=lb://booking-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/bookings/**
# spring.cloud.gateway.routes[1].filters[0]=StripPrefix=0
# spring.cloud.gateway.routes[1].filters[1]=JwtAuthFilter

# Search Service Route (user & admin)
spring.cloud.gateway.routes[2].id=search-service
spring.cloud.gateway.routes[2].uri=lb://search-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/search/**
# spring.cloud.gateway.routes[2].filters[0]=StripPrefix=0
# spring.cloud.gateway.routes[2].filters[1]=JwtAuthFilter

# FlightDetails Service Route (admin only)
spring.cloud.gateway.routes[3].id=flightdetails-service
spring.cloud.gateway.routes[3].uri=lb://flightdetails-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/flights/**
spring.cloud.gateway.routes[3].filters[0]=StripPrefix=0
spring.cloud.gateway.routes[3].filters[1]=JwtAuthFilter

# Fare Service Route (admin only)
spring.cloud.gateway.routes[4].id=fare-service
spring.cloud.gateway.routes[4].uri=lb://fare-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/fares/**
spring.cloud.gateway.routes[4].filters[0]=StripPrefix=0
spring.cloud.gateway.routes[4].filters[1]=JwtAuthFilter

# --- Swagger UI routes (optional, for gateway access to Swagger pages) ---

# Booking Service Swagger UI and API Docs
spring.cloud.gateway.routes[5].id=booking-service
spring.cloud.gateway.routes[5].uri=lb://booking-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/bookings/swagger-ui.html,/booking/v3/api-docs
spring.cloud.gateway.routes[5].filters[0]=StripPrefix=1

# Identity Service Swagger UI and API Docs
spring.cloud.gateway.routes[6].id=identity-service
spring.cloud.gateway.routes[6].uri=lb://identity-service
spring.cloud.gateway.routes[6].predicates[0]=Path=/api/auth/swagger-ui.html,/auth/v3/api-docs
spring.cloud.gateway.routes[6].filters[0]=StripPrefix=1

# Search Service Swagger UI and API Docs
spring.cloud.gateway.routes[7].id=search-service
spring.cloud.gateway.routes[7].uri=lb://search-service
spring.cloud.gateway.routes[7].predicates[0]=Path=/search/swagger-ui.html,/search/v3/api-docs
spring.cloud.gateway.routes[7].filters[0]=StripPrefix=1

# FlightDetails Service Swagger UI and API Docs
spring.cloud.gateway.routes[8].id=flightdetails-service
spring.cloud.gateway.routes[8].uri=lb://flightdetails-service
spring.cloud.gateway.routes[8].predicates[0]=Path=/flightdetails/swagger-ui.html,/flightdetails/v3/api-docs
spring.cloud.gateway.routes[8].filters[0]=StripPrefix=1

# Fare Service Swagger UI and API Docs
spring.cloud.gateway.routes[9].id=fare-service
spring.cloud.gateway.routes[9].uri=lb://fare-service
spring.cloud.gateway.routes[9].predicates[0]=Path=/fare/swagger-ui.html,/fare/v3/api-docs
spring.cloud.gateway.routes[9].filters[0]=StripPrefix=1



